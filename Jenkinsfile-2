pipeline {
  agent any 
  environment {
    registry = "292708977244.dkr.ecr.eu-west-2.amazonaws.com/demo"
    IMAGE_NAME = 'cosign_test'
    IMAGE_VERSION='8.5-204'
    COSIGN_PASSWORD = credentials('cosign-password')
    COSIGN_PRIVATE_KEY = credentials('cosign-private-key')

  }

  stages {
    stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/seanpaul91/jenkins-example-ghcr.git']]])     
            }
        }

    stage('cleanup') {
      steps {
        bat 'docker system prune -a --volumes --force'
      }
    }
    stage('build image') {
      steps {
        script{
        dockerImage = docker.build registry
      }
      }
    }
    stage('Pushing to ECR') {
     steps{  
         script {
          bat 'aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 292708977244.dkr.ecr.eu-west-2.amazonaws.com'
          bat 'docker push 292708977244.dkr.ecr.eu-west-2.amazonaws.com/demo:latest'
         }
        }
      }
    stage('sign the container image'){
     steps{ 
     
      echo "image name is ${IMAGE_NAME}"
    
      bat 'cosign version'
      bat 'cosign sign --key ${COSIGN_PRIVATE_KEY} 292708977244.dkr.ecr.eu-west-2.amazonaws.com/demo:latest'
    
    
    
}
}
}
}
